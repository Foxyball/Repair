package repair;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.MessageFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

public class userListPanel extends javax.swing.JPanel {

    DefaultTableModel model;
    config q = new config();
    private AdminForm adminForm;

    public userListPanel(AdminForm adminForm) {
        initComponents();

        this.adminForm = adminForm;
        lblSearchResults.setVisible(false); // Резултати от търсене етикет

        btnAddUser.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                adminForm.switchToUserAddPanel();
            }
        });

        String[] cols = {"id", "Име", "Имейл", "Телефон", "Град", "Статус", "ЕГН", "ПКОД", "Достъп", "Фирма", "Фирма име", "Фирма ЕИК", "Фирма МОЛ", "Фирма ДДС", "Фирма адрес"};
        model = new DefaultTableModel(cols, 0);

        // Прави таблицата да не се едитва
        userTable.setDefaultEditor(Object.class, null);
        userTable.setAutoCreateRowSorter(true); // позволява сортиране по колони

        String filter = "";
        ArrayList<User> users = q.loadUserData(filter);

        for (User user : users) {
            model.addRow(user.toArray());
        }

        userTable.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtSearchUser = new javax.swing.JTextField();
        lblAllUser = new javax.swing.JLabel();
        lblSearchResults = new javax.swing.JLabel();
        btnSearchUser = new repair.Button();
        btnRefreshUser = new repair.Button();
        btnExportUser = new repair.Button();
        btnDeleteUser = new repair.Button();
        btnEditUser = new repair.Button();
        btnAddUser = new repair.Button();
        btnSendEmailUser = new repair.Button();
        jScrollPane2 = new javax.swing.JScrollPane();
        userTable = new repair.Table();

        txtSearchUser.setBackground(new java.awt.Color(255, 255, 255));
        txtSearchUser.setForeground(new java.awt.Color(0, 0, 0));
        txtSearchUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchUserActionPerformed(evt);
            }
        });

        lblAllUser.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblAllUser.setText("ВСИЧКИ ПОТРЕБИТЕЛИ");

        lblSearchResults.setText("Резултати: 0");

        btnSearchUser.setBackground(new java.awt.Color(0, 153, 255));
        btnSearchUser.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/repair/assets/search.png"))); // NOI18N
        btnSearchUser.setText("Търсене");
        btnSearchUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchUserActionPerformed(evt);
            }
        });

        btnRefreshUser.setBackground(new java.awt.Color(0, 153, 255));
        btnRefreshUser.setForeground(new java.awt.Color(255, 255, 255));
        btnRefreshUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/repair/assets/refresh.png"))); // NOI18N
        btnRefreshUser.setText("Обнови");
        btnRefreshUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshUserActionPerformed(evt);
            }
        });

        btnExportUser.setBackground(new java.awt.Color(0, 153, 255));
        btnExportUser.setForeground(new java.awt.Color(255, 255, 255));
        btnExportUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/repair/assets/export.png"))); // NOI18N
        btnExportUser.setText("Експорт");
        btnExportUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportUserActionPerformed(evt);
            }
        });

        btnDeleteUser.setBackground(new java.awt.Color(0, 153, 255));
        btnDeleteUser.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/repair/assets/erase.png"))); // NOI18N
        btnDeleteUser.setText("Изтриване");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        btnEditUser.setBackground(new java.awt.Color(0, 153, 255));
        btnEditUser.setForeground(new java.awt.Color(255, 255, 255));
        btnEditUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/repair/assets/editing.png"))); // NOI18N
        btnEditUser.setText("Редактиране");
        btnEditUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditUserActionPerformed(evt);
            }
        });

        btnAddUser.setBackground(new java.awt.Color(0, 153, 255));
        btnAddUser.setForeground(new java.awt.Color(255, 255, 255));
        btnAddUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/repair/assets/save.png"))); // NOI18N
        btnAddUser.setText("Добавяне");

        btnSendEmailUser.setBackground(new java.awt.Color(0, 153, 255));
        btnSendEmailUser.setForeground(new java.awt.Color(255, 255, 255));
        btnSendEmailUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/repair/assets/email.png"))); // NOI18N
        btnSendEmailUser.setText("Изпрати Имейл");
        btnSendEmailUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendEmailUserActionPerformed(evt);
            }
        });

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(userTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditUser, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(btnExportUser, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnRefreshUser, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSendEmailUser, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(txtSearchUser, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearchUser, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSearchResults))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(lblAllUser)))
                        .addGap(0, 362, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAllUser)
                .addGap(81, 81, 81)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearchResults)
                    .addComponent(btnRefreshUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExportUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSendEmailUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    private void txtSearchUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchUserActionPerformed

    private void btnSearchUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchUserActionPerformed
        String keyword = txtSearchUser.getText().trim();

        if (keyword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Моля, въведете ключова дума за търсене!", "Грешка", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String[] columns = {"id", "name", "email", "phone", "city", "status", "egn", "pkod", "role", "is_firm", "firm_name", "firm_eik", "firm_mol", "firm_dds", "firm_address"};
        String whereClause = "name LIKE ? OR email LIKE ? OR phone LIKE ? OR city LIKE ?";
        Object[] params = {"%" + keyword + "%", "%" + keyword + "%", "%" + keyword + "%", "%" + keyword + "%"};

        ArrayList<String> searchResults = q.select(columns, "users", whereClause, params);

        String[] columnNames = {"id", "Име", "Имейл", "Телефон", "Град", "Статус", "ЕГН", "ПКОД", "Достъп", "Фирма", "Фирма име", "Фирма ЕИК", "Фирма МОЛ", "Фирма ДДС", "Фирма адрес"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);

        for (String row : searchResults) {
            String[] userDetails = row.split("---");

            // Обхожда масива и проверява за null стойности, за да ги визуализира като празна клетка, а не null
            for (int i = 0; i < userDetails.length; i++) {
                if (userDetails[i] == null || userDetails[i].equals("null")) {
                    userDetails[i] = "";
                }
            }
            userDetails[9] = userDetails[9].equals("1") ? "Да" : "Не";

            if (userDetails[8].equals("admin")) {
                userDetails[8] = "Администратор";
            } else {
                userDetails[8] = "Клиент";
            }

            if (userDetails[5].equals("active")) {
                userDetails[5] = "Активен";
            } else {
                userDetails[5] = "Неактивен";
            }

            model.addRow(userDetails);
        }

        userTable.setModel(model);
        userTable.setDefaultEditor(Object.class, null);

        // Display the number of search results
        lblSearchResults.setVisible(true);
        int resultCount = searchResults.size();
        lblSearchResults.setText("Резултати: " + resultCount);
    }//GEN-LAST:event_btnSearchUserActionPerformed

    private void btnRefreshUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshUserActionPerformed
        refreshUserList();
    }//GEN-LAST:event_btnRefreshUserActionPerformed

    private void btnExportUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportUserActionPerformed
        MessageFormat header = new MessageFormat("Клиенти");
        try {
            userTable.print(javax.swing.JTable.PrintMode.FIT_WIDTH, header, null);
        } catch (java.awt.print.PrinterException e) {
            System.err.format("Грешка при принтиране %s%n", e.getMessage());
        }
    }//GEN-LAST:event_btnExportUserActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        int selectedRow = userTable.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Моля, изберете потребител за изтриване.");
            return;
        }

        // Кастване на ID-то към int от String
        String idString = userTable.getValueAt(selectedRow, 0).toString();
        int userId = Integer.parseInt(idString);

        int confirm = JOptionPane.showConfirmDialog(this, "Сигурни ли сте, че искате да изтриете този потребител?", "Потвърждение", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            // Use the universal delete method
            boolean isDeleted = q.delete("users", "id", userId); // Pass userId directly instead of params array

            if (isDeleted) {
                refreshUserList();
                JOptionPane.showMessageDialog(this, "Потребителят е изтрит успешно.");
            } else {
                JOptionPane.showMessageDialog(this, "Грешка при изтриване на потребителя.");
            }
        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void btnEditUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditUserActionPerformed
        int selectedRow = userTable.getSelectedRow();
        if (selectedRow != -1) {

            // Кастване на ID-то към int от String
            String idString = userTable.getValueAt(selectedRow, 0).toString();
            int userId = Integer.parseInt(idString);

            // Извикване на универсалния метод select
            String[] columns = {"id", "name", "email", "phone", "city", "status", "egn", "pkod", "role", "is_firm", "firm_name", "firm_eik", "firm_mol", "firm_dds", "firm_address"};
            String whereClause = "id = ?";
            Object[] params = {userId};

            ArrayList<String> result = q.select(columns, "users", whereClause, params);

            if (!result.isEmpty()) {
                // Разделяне на първия (и единствен) ред на масив от стойности
                String[] userData = result.get(0).split("---");

                int id = Integer.parseInt(userData.length > 0 ? userData[0] : "0");
                String name = userData.length > 1 ? userData[1] : "";
                String email = userData.length > 2 ? userData[2] : "";
                String phone = userData.length > 3 ? userData[3] : "";
                String city = userData.length > 4 ? userData[4] : "";
                String status = userData.length > 5 ? userData[5] : "";
                String egn = userData.length > 6 ? userData[6] : "";
                String pkod = userData.length > 7 ? userData[7] : "";
                String role = userData.length > 8 ? userData[8] : "";
                String is_firm = userData.length > 9 ? userData[9] : "";
                String firm_name = userData.length > 10 ? userData[10] : "";
                String firm_eik = userData.length > 11 ? userData[11] : "";
                String firm_mol = userData.length > 12 ? userData[12] : "";
                String firm_dds = userData.length > 13 ? userData[13] : "";
                String firm_address = userData.length > 14 ? userData[14] : "";

                // Подаване на данните към панела за редактиране, за да се визуализират
                adminForm.switchToUserEditPanel(id, name, email, phone, city, status, egn, pkod, role, is_firm, firm_name, firm_eik, firm_mol, firm_dds, firm_address);
            } else {
                JOptionPane.showMessageDialog(this, "Не е намерен потребител с този ID!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Моля, изберете ред от таблицата!");
        }

    }//GEN-LAST:event_btnEditUserActionPerformed

    private void btnSendEmailUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendEmailUserActionPerformed
        int selectedRow = userTable.getSelectedRow();
        if (selectedRow != -1) {

            String email = userTable.getValueAt(selectedRow, 2).toString();
            String userName = userTable.getValueAt(selectedRow, 1).toString();

            new SendEmailForm(email, userName).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Моля, изберете потребител.");
        }
    }//GEN-LAST:event_btnSendEmailUserActionPerformed

    // Обновяване на данните с бутон
    public void refreshUserList() {
        String[] columns = {"id", "name", "email", "phone", "city", "status", "egn", "pkod", "role", "is_firm",
            "firm_name", "firm_eik", "firm_mol", "firm_dds", "firm_address"};
        String table = "users";
        String whereClause = "";
        Object[] params = null;

        ArrayList<String> userList = q.select(columns, table, whereClause, params);

        String[] cols = {"id", "Име", "Имейл", "Телефон", "Град", "Статус", "ЕГН", "ПКОД", "Достъп", "Фирма", "Фирма име", "Фирма ЕИК", "Фирма МОЛ", "Фирма ДДС", "Фирма адрес"};
        DefaultTableModel model = new DefaultTableModel(cols, 0);

        for (String user : userList) {
            String[] userDetails = user.split("---");

            // Обхожда масива и проверява за null стойности, за да ги визуализира като празна клетка, а не null
            for (int i = 0; i < userDetails.length; i++) {
                if (userDetails[i] == null || userDetails[i].equals("null")) {
                    userDetails[i] = "";
                }
            }
            userDetails[9] = userDetails[9].equals("1") ? "Да" : "Не";

            if (userDetails[8].equals("admin")) {
                userDetails[8] = "Администратор";
            } else {
                userDetails[8] = "Клиент";
            }

            if (userDetails[5].equals("active")) {
                userDetails[5] = "Активен";
            } else {
                userDetails[5] = "Неактивен";
            }

            model.addRow(userDetails);
        }

        userTable.setModel(model);

        // да не може да се редактира в самата таблица
        userTable.setDefaultEditor(Object.class, null);

        // Скриване на резултати: 4
        lblSearchResults.setVisible(false);
        txtSearchUser.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private repair.Button btnAddUser;
    private repair.Button btnDeleteUser;
    private repair.Button btnEditUser;
    private repair.Button btnExportUser;
    private repair.Button btnRefreshUser;
    private repair.Button btnSearchUser;
    private repair.Button btnSendEmailUser;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAllUser;
    private javax.swing.JLabel lblSearchResults;
    private javax.swing.JTextField txtSearchUser;
    private repair.Table userTable;
    // End of variables declaration//GEN-END:variables
}
